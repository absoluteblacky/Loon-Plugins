// 插件名称: 库街区自动签到（兼容性修复版）
// 确保此代码保存为 UTF-8 编码的 .plugin 文件

const PLUGIN_NAME = "库街区签到";
const COOKIE_KEY = "kuro_cookies";
const API_KEY = "kuro_api";
const MAX_RETRY = 3;
const RETRY_DELAY = 2000;

if (typeof $request !== "undefined") {
  const url = $request.url;
  const cookie = $request.headers?.Cookie || $request.headers?.cookie || "";
  
  if (cookie) {
    const accountId = (cookie.match(/user_id=(\d+)/) || url.match(/user_id=(\d+)/))?.[1] || Date.now();
    const stored = $persistentStore.read(COOKIE_KEY) ? JSON.parse($persistentStore.read(COOKIE_KEY)) : {};
    stored[accountId] = { 
      cookie: cookie, 
      expire: Date.now() + 86400000 // 24小时有效期
    };
    $persistentStore.write(JSON.stringify(stored), COOKIE_KEY);
    console.log(`账号 ${accountId} Cookie已保存`);
  }

  if (url.includes("sign") || url.includes("checkin")) {
    $persistentStore.write(url, API_KEY);
    console.log("API地址已更新: " + url);
  }
  
  $done();
} else {
  const apiURL = $persistentStore.read(API_KEY);
  const cookies = $persistentStore.read(COOKIE_KEY) ? JSON.parse($persistentStore.read(COOKIE_KEY)) : {};
  
  if (!apiURL || Object.keys(cookies).length === 0) {
    $notification.post(PLUGIN_NAME, "错误", "请先打开库街区APP完成配置");
    $done();
  }
  
  Object.entries(cookies).forEach(([accountId, data]) => {
    if (Date.now() > data.expire) {
      $notification.post(PLUGIN_NAME, `账号 ${accountId} 过期`, "请重新登录");
      return;
    }
    
    let retry = MAX_RETRY;
    const sign = () => {
      $httpClient.post({
        url: apiURL,
        headers: { Cookie: data.cookie, "User-Agent": "KuJie/2.1.0" }
      }, (error, _, body) => {
        if (error) {
          if (retry-- > 0) {
            setTimeout(sign, RETRY_DELAY);
          } else {
            $notification.post(PLUGIN_NAME, `账号 ${accountId} 失败`, error);
          }
          return;
        }
        
        try {
          const res = JSON.parse(body);
          if (res.code === 200) {
            $notification.post(PLUGIN_NAME, `账号 ${accountId} 成功`, `积分: ${res.data?.points || 0}`);
          } else {
            $notification.post(PLUGIN_NAME, `账号 ${accountId} 错误`, res.msg || "未知错误");
          }
        } catch (e) {
          $notification.post(PLUGIN_NAME, `账号 ${accountId} 数据异常`, e.message);
        }
      });
    };
    
    sign();
  });
  
  $done();
}
